title: Skupper Hello World with YAML
subtitle: A minimal HTTP application deployed across Kubernetes clusters using Skupper
github_actions_url: https://github.com/ssorj/skupper-example-yaml/actions/workflows/main.yaml
overview: |
  This example is a variant of [Skupper Hello World][hello-world] that
  is deployed using YAML resource definitions instead of imperative
  commands.

  It contains two services:

  * A backend service that exposes an `/api/hello` endpoint.  It
    returns greetings of the form `Hi, <your-name>.  I am <my-name>
    (<pod-name>)`.

  * A frontend service that sends greetings to the backend and
    fetches new greetings in response.

  Skupper enables you place the backend in one cluster and the
  frontend in another and maintain connectivity between the two
  services without exposing the backend to the public internet.

  <img src="images/entities.svg" width="640"/>

  [hello-world]: https://github.com/skupperproject/skupper-example-hello-world
sites:
  west:
    kubeconfig: ~/.kube/config-west
    namespace: west
  east:
    kubeconfig: ~/.kube/config-east
    namespace: east
steps:
  - standard: configure_separate_console_sessions
  - standard: access_your_clusters
  - title: Apply YAML
    preamble: |
      [Skupper YAML config reference](https://github.com/ssorj/refdog)

      #### Resources

      West:

      * `west/frontend.yml` - The Hello World frontend
      * `west/skupper.yaml` - The Skupper site controller
      * `west/site.yaml` - Configuration for site `west`
      * `west/listener.yaml` - The listener for the `backend` service

      East:

      * `east/backend.yaml` - The Hello World backend
      * `east/skupper.yaml` - The Skupper site controller
      * `east/site.yaml` - Configuration for site `east`
      * `east/connector.yaml` - The connector for the `backend` service

      #### Resources in west

      [site.yaml](west/site.yaml):

      ~~~ yaml
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: skupper-site
        namespace: west
        labels:
          skupper.io/type: site
      data:
        name: west
      ~~~

      [listener.yaml](west/listener.yaml):

      ~~~ yaml
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: skupper-listener-backend
        namespace: west
        labels:
          skupper.io/type: listener
      data:
        routing-key: backend:http
        hostname: backend
        port: 8080
      ~~~

      #### Resources in east

      [site.yaml](east/site.yaml):

      ~~~ yaml
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: skupper-site
        namespace: east
        labels:
          skupper.io/type: site
      data:
        name: east
      ~~~

      [connector.yaml](east/connector.yaml):

      ~~~ yaml
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: skupper-connector-backend
        namespace: east
        labels:
          skupper.io/type: connector
      data:
        routing-key: backend:http
        port: 8080
        selector: app=backend
      ~~~
    commands:
      west:
        - run: kubectl apply -f west/frontend.yaml -f west/skupper.yaml -f west/site.yaml -f west/listener.yaml
          await_external_ip: service/skupper
      east:
        - run: kubectl apply -f east/backend.yaml -f east/skupper.yaml -f east/site.yaml -f east/connector.yaml
          await_external_ip: service/skupper
  - standard: link_your_namespaces
    preamble: |
      You can do X and Y declaratively, but linking...

      Unlike the other aspects of Skupper setup, linking namespaces is
      necessarily procedural.  That's because the connection details
      embedded in the tokens used for linking cannot be known in
      advance.

      XXX

      On Linux or Mac, you can use the install script (inspect it
      [here][install-script]) to download and extract the command:

      ~~~ shell
      curl https://skupper.io/install.sh | sh
      ~~~

      For Windows and other installation options, see [Installing
      Skupper][install-docs].

      First, use `skupper token create` in one namespace to generate the
      token.  Then, use `skupper link create` in the other to create a
      link.

      [install-script]: https://github.com/skupperproject/skupper-website/blob/main/docs/install.sh
      [install-docs]: https://skupper.io/install/index.html
  - title: Special extra step
    preamble: |
      This will disappear when we have the new service binding YAML.
    commands:
      east:
        - run: skupper expose deployment/backend
  - standard: test_the_application
  - standard: cleaning_up
    commands:
      west:
        - run: kubectl delete -f west/frontend.yaml -f west/skupper.yaml -f west/site.yaml -f west/listener.yaml
      east:
        - run: kubectl delete -f east/backend.yaml -f east/skupper.yaml -f east/site.yaml -f east/connector.yaml
