title: Skupper Hello World with YAML
subtitle: A minimal HTTP application deployed across Kubernetes clusters using Skupper
github_actions_url: https://github.com/skupperproject/skupper-example-hello-world/actions/workflows/main.yaml
overview: |
  This example is a variant of [Skupper Hello World][hw] that is
  deployed using YAML resource definitions instead of imperative
  commands.

  It contains two services:

  * A backend service that exposes an `/api/hello` endpoint.  It
    returns greetings of the form `Hi, <your-name>.  I am <my-name>
    (<pod-name>)`.

  * A frontend service that sends greetings to the backend and
    fetches new greetings in response.

  Skupper enables you place the backend in one cluster and the
  frontend in another and maintain connectivity between the two
  services without exposing the backend to the public internet.

  <img src="images/entities.svg" width="640"/>

  [hw]: https://github.com/skupperproject/skupper-example-hello-world
sites:
  west:
    kubeconfig: ~/.kube/config-west
    namespace: west
  east:
    kubeconfig: ~/.kube/config-east
    namespace: east
steps:
  - standard: configure_separate_console_sessions
  - standard: access_your_clusters
  - standard: set_up_your_namespaces
  - title: Apply YAML
    preamble: |
      XXX
    commands:
      west:
        - run: kubectl apply -f install.yaml -f west/frontend.yaml -f west/site.yaml -f west/listener.yaml
          await_external_ip: service/skupper
      east:
        - run: kubectl apply -f install.yaml -f east/backend.yaml -f east/site.yaml -f east/connector.yaml
          await_external_ip: service/skupper
  - title: Link your namespaces
    preamble: |
      XXX

      On Linux or Mac, you can use the install script (inspect it
      [here][install-script]) to download and extract the command:

      ~~~ shell
      curl https://skupper.io/install.sh | sh
      ~~~

      For Windows and other installation options, see [Installing
      Skupper][install-docs].

      First, use `skupper token create` in one namespace to generate the
      token.  Then, use `skupper link create` in the other to create a
      link.

      [install-script]: https://github.com/skupperproject/skupper-website/blob/main/docs/install.sh
      [install-docs]: https://skupper.io/install/index.html
    commands:
      west:
        - run: skupper token create ~/secret.token
          output: Token written to ~/secret.token
      east:
        - run: skupper link create ~/secret.token
          output: |
            Site configured to link to https://10.105.193.154:8081/ed9c37f6-d78a-11ec-a8c7-04421a4c5042 (name=link1)
            Check the status of the link using 'skupper link status'.
        - run: skupper link status --wait 60
          apply: test
  - title: Special extra step
    preamble: |
      This will disappear when we have the new service binding YAML.
    commands:
      east:
        - run: skupper expose deployment/backend
  - standard: test_the_application
  # - standard: accessing_the_web_console
  - standard: cleaning_up
    commands:
      west:
        - run: kubectl delete -f install.yaml -f west/frontend.yaml -f west/site.yaml -f west/listener.yaml
      east:
        - run: kubectl delete -f install.yaml -f east/backend.yaml -f east/site.yaml -f east/connector.yaml
